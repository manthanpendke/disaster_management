# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E7GCF9bEo3PXRCasUdbZnvXB564Ns4ZY
"""

import streamlit as st
import numpy as np
import cv2
from tensorflow.keras.models import load_model

# Load the model
model = load_model('model.h5')  # Replace with your actual model path

# Define mappings for predictions
disaster_names = {0: "cyclone", 1: "earthquake", 2: "flood", 3: "wildfire"}
casualty_names = {0: "low", 1: "medium", 2: "high", 3: "critical"}
danger_names = {0: "low", 1: "medium", 2: "high", 3: "extreme"}
authority_names = {0: "local", 1: "state", 2: "central", 3: "international"}

# Streamlit App
st.title("Disaster Response Prediction App")
st.write("Upload an image to predict disaster, casualty, danger, and required authority levels.")

uploaded_file = st.file_uploader("Upload an Image", type=["jpg", "png"])

if uploaded_file is not None:
    # Process the image
    file_bytes = np.asarray(bytearray(uploaded_file.read()), dtype=np.uint8)
    image = cv2.imdecode(file_bytes, 1)
    resized_image = cv2.resize(image, (224, 224)) / 255.0  # Resize and normalize
    input_data = np.expand_dims(resized_image, axis=0)

    # Make predictions
    predictions = model.predict(input_data)

    # Display results
    st.subheader("Predictions:")
    st.write(f"Disaster: {disaster_names[np.argmax(predictions[0])]}")
    st.write(f"Casualty Level: {casualty_names[np.argmax(predictions[1])]}")
    st.write(f"Danger Level: {danger_names[np.argmax(predictions[2])]}")
    st.write(f"Authority Level: {authority_names[np.argmax(predictions[3])]}")